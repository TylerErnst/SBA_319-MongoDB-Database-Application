<!DOCTYPE html>
<html lang="en">

<head>
  <link rel="stylesheet" href="/style.css" />
</head>

<body>
  <ul id="postList">
    <% posts.forEach((post)=> { %>
      <li class="posts">
        <%post.id=post._id.toString()%>
          <a href=<%=`/api/posts/${post.id}`%>><%=post.title%></a>
          <!-- <p><%=post.id%></p> -->
          <button class="edit-btn" data-id="<%= post.id %>">
            <img src="edit.png" alt="Edit" />
          </button>
          <button class="delete-btn" data-id="<%= post.id %>">
            <img src="/trash-can.png" alt="Delete" />
          </button>
      </li>
      <% })%>
  </ul>

  <!-- New post -->
  <!-- User -->

  <!-- Title -->

  <!-- Content -->

  <!-- Submit Button -->
  <!-- <form action="/api/posts" method="post"> -->
  <form id="postForm">
    <input type="text" name="userId" id="userId" class="form" placeholder="Enter your Name" />  
    <input type="text" name="title" id="title" class="form" placeholder="Title" />  
    <textarea name="content" id="content" class="form" placeholder="Content" rows="6"></textarea>
    <input type="submit" value="Create Post" id="post-btn" />
  </form>

  <script>
    document.getElementById('postForm').addEventListener('submit', async function (event) {
      event.preventDefault(); // Prevent default form submission

      // Get form data
      // const formData = {
      //     userId: document.getElementById('userId').value,
      //     title: document.getElementById('title').value,
      //     content: document.getElementById('content').value
      // };
      const formData = {
        author: document.getElementById('userId').value,
        title: document.getElementById('title').value,
        body: document.getElementById('content').value
      };

      // Send POST request using fetch
      fetch('/api/posts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
      })
        .then(response => response.json())
        .then(data => {
          console.log('Response:', data);
        })
        .catch(error => {
          console.error('Error:', error);
          // Handle errors here
        });
    });

    document.querySelectorAll('.delete-btn').forEach(btn => {
      btn.addEventListener('click', async function (event) {
        event.preventDefault();

        const postId = this.getAttribute('data-id');

        // Send DELETE request to delete the post
        fetch(`/api/posts/${postId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json'
          }
        })
          .then(response => response.json())
          .then(data => {
            console.log('Post deleted successfully:', data);
            // Optionally, remove the deleted post from the UI
            this.parentNode.remove();
          })
          .catch(error => {
            console.error('Error deleting post:', error);
            // Handle errors here
          });
      });
    });

    document.querySelectorAll('.edit-btn').forEach(btn => {
      btn.addEventListener('click', async function (event) {
        event.preventDefault();

        const postId = this.getAttribute('data-id');

        // Create a form dynamically
        const form = document.createElement('form');
        form.innerHTML = `
                    <label for="newTitle">New Title:</label>
                    <input type="text" id="newTitle" name="newTitle" required>
                    <input type="submit" value="Update">
                `;

        // Append the form as a sibling to the post's <li> element
        // so that it is directly underneath the post being edited.
        const listItem = this.parentNode;
        listItem.appendChild(form);

        // Add form submit event listener
        form.addEventListener('submit', async function (e) {
          e.preventDefault();
          const newTitle = document.getElementById('newTitle').value;

          // Send PATCH/PUT request to update the post title
          fetch(`/api/posts/${postId}`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              title: newTitle
            })
          })
            .then(response => response.json())
            .then(data => {
              console.log('Post title updated successfully:', data);
            })
            .catch(error => {
              console.error('Error updating post title:', error);
              // Handle errors here
            });
        });
      });
    });
  </script>
</body>

</html>